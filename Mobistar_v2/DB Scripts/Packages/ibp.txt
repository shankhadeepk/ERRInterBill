CREATE OR REPLACE package SYSADM.ibp as
procedure ibp_contract_activation ( i_req_id in integer );
procedure ibp_service_activation ( i_req_id in integer );
procedure ibp_service_deactivation ( i_req_id in integer );
procedure ibp_contract_sus_react_deact ( i_req_id in integer );
procedure ibp_rateplan_change ( i_req_id in integer );
procedure ibp_parameter_change ( i_req_id in integer );
procedure ibp_billcycle_change ( i_req_id in integer );
procedure ibp_msisdn_change ( i_req_id in integer );
procedure ibp_imsi_change ( i_req_id in integer );
procedure ibp_contract_takeover ( i_req_id in integer );
procedure ibp_process_queue_population (i_req_id in integer);
end ibp;
/

CREATE OR REPLACE package body SYSADM.ibp as
procedure ibp_contract_activation ( i_req_id in integer )
is
v_co_id integer;
v_sccode integer;
v_action_id number;
v_ch_reason integer;
v_cust_id integer;
v_msisdn varchar2(20);
v_bcycle varchar2(2);
v_tm integer;
v_rem varchar2(400);
begin
    select co_id , ch_reason, action_id into v_co_id, v_ch_reason, v_action_id from ibp_staging where req_id=i_req_id and action_id=1;
    select customer_id, billcycle, dn_num, tmcode, sccode into v_cust_id, v_bcycle, v_msisdn, v_tm, v_sccode from ibp_view where co_id=v_co_id;
    for i in (select sncode||nvl2(cs_sparam1, '('||cs_sparam1||')', null) serv from contr_services where co_id=v_co_id and substr(cs_stat_chng, -1)='a' and tmcode=v_tm 
                and sncode in (select sncode from ibp_product_configuration where tmcode=v_tm or tmcode='ALL'))
    loop
    v_rem:=v_rem||i.serv||'|';
    end loop;
    v_rem:=v_rem||'::';
    for j in (select dn_num from ibp_view where customer_id=v_cust_id and ch_status in ('a', 's') and sccode=v_sccode)
    loop
    v_rem:=v_rem||'|'||j.dn_num;
    end loop;
    insert into ibp_processing_queue (id, customer_id, billcycle, ch_reason, msisdn, co_id, tmcode, action_id, process_status_timestamp, process_status, sccode, remark, req_id)
    values (IBP_PROCESSING_SEQ.nextval, v_cust_id, v_bcycle, v_ch_reason, v_msisdn, v_co_id, v_tm, v_action_id, sysdate, 1, v_sccode, v_rem, i_req_id);
    update ibp_staging set request_status='P' where req_id=i_req_id;
    commit;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            update ibp_staging set request_status='E-No data' where req_id=i_req_id;
            commit;
        WHEN OTHERS THEN
            update ibp_staging set request_status='E' where req_id=i_req_id;
            commit;
end;
procedure ibp_service_activation ( i_req_id in integer )
is
v_co_id integer;
v_action_id number;
v_sn integer;
v_sccode integer;
v_cust_id integer;
v_msisdn varchar2(20);
v_cs_param1 varchar2(2000);
v_tm integer;
v_rem varchar2(400);
v_cnt number;
begin
    select co_id , tmcode, sncode, cs_param1, action_id into v_co_id, v_tm, v_sn, v_cs_param1, v_action_id from ibp_staging 
    where req_id=i_req_id and action_id=5; -- retriving information generated by trigger
    select count(1) into v_cnt from ibp_product_configuration where tmcode in (v_tm, 'ALL') and sncode=v_sn;-- checking weather the service is releate to IBP or not
    if (v_cnt>0) then
        select customer_id, dn_num, sccode into v_cust_id, v_msisdn, v_sccode from ibp_view where co_id=v_co_id;
        for j in (select dn_num from ibp_view where customer_id=v_cust_id and ch_status in ('a', 's') and sccode=v_sccode)
        loop
            v_rem:=v_rem||j.dn_num||'|';
        end loop;
        v_rem:=substr(v_rem, 1, length(v_rem)-1);
        insert into ibp_processing_queue (id, customer_id, msisdn, co_id, tmcode, sncode, serviceparameter, action_id, process_status_timestamp, process_status, remark, req_id)
        values (IBP_PROCESSING_SEQ.nextval, v_cust_id, v_msisdn, v_co_id, v_tm, v_sn, v_cs_param1, v_action_id, sysdate, 1, v_rem, i_req_id);
        update ibp_staging set request_status='P' where req_id=i_req_id;
        commit;
    else
        update ibp_staging set request_status='IB' where req_id=i_req_id;
        commit;
    end if;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            update ibp_staging set request_status='E-No data' where req_id=i_req_id;
            commit;
        WHEN OTHERS THEN
            update ibp_staging set request_status='E' where req_id=i_req_id;
            commit;
end;
procedure ibp_service_deactivation ( i_req_id in integer )
is
v_co_id integer;
v_action_id number;
v_sn integer;
v_cust_id integer;
v_msisdn varchar2(20);
v_cs_param1 varchar2(2000);
v_tm integer;
v_cnt number;
v_sccode integer;
begin
    select co_id , tmcode, sncode, cs_param1, action_id into v_co_id, v_tm, v_sn, v_cs_param1, v_action_id from ibp_staging
    where req_id=i_req_id and action_id=6;
    select count(1) into v_cnt from ibp_staging where co_id=v_co_id and action_id=9 and req_id>i_req_id and old_val=v_tm;
    if (v_cnt>0) then
        update ibp_staging set request_status='IA' where req_id=i_req_id;
        commit;
    else
        select count(1) into v_cnt from ibp_product_configuration where tmcode in (v_tm, 'ALL') and sncode=v_sn;
        if (v_cnt>0) then
            select customer_id, dn_num, sccode into v_cust_id, v_msisdn, v_sccode from ibp_view where co_id=v_co_id;
            insert into ibp_processing_queue (id, customer_id, msisdn, co_id, tmcode, sncode, serviceparameter, action_id, process_status_timestamp, process_status, req_id)
            values (IBP_PROCESSING_SEQ.nextval, v_cust_id, v_msisdn, v_co_id, v_tm, v_sn, v_cs_param1, v_action_id, sysdate, 1, i_req_id);
            update ibp_staging set request_status='P' where req_id=i_req_id;
            commit;
        else
            update ibp_staging set request_status='IB' where req_id=i_req_id;
            commit;
        end if;
    end if;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            update ibp_staging set request_status='E-No data' where req_id=i_req_id;
            commit;
        WHEN OTHERS THEN
            update ibp_staging set request_status='E' where req_id=i_req_id;
            commit;
end;
procedure ibp_contract_sus_react_deact ( i_req_id in integer )
is
v_co_id integer;
v_action_id number;
v_ch_reason integer;
v_cust_id integer;
v_msisdn varchar2(20);
v_sccode integer;
begin
    select co_id , ch_reason, action_id into v_co_id, v_ch_reason, v_action_id from ibp_staging
    where req_id=i_req_id and action_id in (2, 3, 4);
            select customer_id, dn_num, sccode into v_cust_id, v_msisdn, v_sccode from ibp_view where co_id=v_co_id;
            insert into ibp_processing_queue (id, customer_id, msisdn, co_id, action_id, ch_reason, process_status_timestamp, process_status, req_id)
            values (IBP_PROCESSING_SEQ.nextval, v_cust_id, v_msisdn, v_co_id, v_action_id, v_ch_reason, sysdate, 1, i_req_id);
            update ibp_staging set request_status='P' where req_id=i_req_id;
            commit;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            update ibp_staging set request_status='E-No data' where req_id=i_req_id;
            commit;
        WHEN OTHERS THEN
            update ibp_staging set request_status='E' where req_id=i_req_id;
            commit;
end;
procedure ibp_rateplan_change ( i_req_id in integer )
is
v_co_id integer;
v_action_id number;
v_old_tm number;
v_new_tm number;
v_cust_id integer;
v_msisdn varchar2(20);
v_sccode integer; 
v_bcycle number;
v_tm integer;
v_rem varchar2(400);
begin
    select co_id , old_val, new_val, action_id into v_co_id, v_old_tm, v_new_tm, v_action_id from ibp_staging
    where req_id=i_req_id and action_id=11;
    update ibp_staging set request_status='IA' where co_id=v_co_id and action_id=6 and req_id<i_req_id and request_status is null;
    commit;
    select customer_id, billcycle, dn_num, tmcode, sccode into v_cust_id, v_bcycle, v_msisdn, v_tm, v_sccode from ibp_view where co_id=v_co_id;
    for i in (select sncode||nvl2(cs_sparam1, '('||cs_sparam1||')', null) serv from contr_services where co_id=v_co_id and substr(cs_stat_chng, -1)='a' and tmcode=v_tm 
                and sncode in (select sncode from ibp_product_configuration where tmcode=v_tm or tmcode='ALL') and cs_seqno=(select max(cs_seqno) from contr_services where co_id=v_co_id))
    loop
    v_rem:=v_rem||i.serv||'|';
    end loop;
    v_rem:=v_rem||'::';
    for j in (select dn_num from ibp_view where customer_id=v_cust_id and ch_status in ('a', 's') and sccode=v_sccode)
    loop
    v_rem:=v_rem||'|'||j.dn_num;
    end loop;
    insert into ibp_processing_queue (id, customer_id, billcycle, old_val, new_val, msisdn, co_id, tmcode, action_id, process_status_timestamp, process_status, sccode, remark, req_id)
    values (IBP_PROCESSING_SEQ.nextval, v_cust_id, v_bcycle, v_old_tm, v_new_tm, v_msisdn, v_co_id, v_tm, v_action_id, sysdate, 1, v_sccode, v_rem, i_req_id);
    update ibp_staging set request_status='P' where req_id=i_req_id;
    commit;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            update ibp_staging set request_status='E-No data' where req_id=i_req_id;
            commit;
        WHEN OTHERS THEN
            update ibp_staging set request_status='E' where req_id=i_req_id;
            commit;
end;
procedure ibp_parameter_change ( i_req_id in integer )
is
v_co_id integer;
v_action_id number;
v_sn integer;
v_sccode integer;
v_cust_id integer;
v_msisdn varchar2(20);
v_cs_param1 varchar2(2000);
v_tm integer;
v_old_param varchar2(2000);
v_new_param varchar2(2000);
v_cnt number;
begin
    select co_id , tmcode, sncode, cs_param1, old_val, new_val, action_id into v_co_id, v_tm, v_sn, v_cs_param1, v_old_param, v_new_param, v_action_id 
    from ibp_staging where req_id=i_req_id and action_id=7;
    select count(1) into v_cnt from ibp_product_configuration where tmcode in (v_tm, 'ALL') and sncode=v_sn;
    if (v_cnt>0) then
        select customer_id, dn_num, sccode into v_cust_id, v_msisdn, v_sccode from ibp_view where co_id=v_co_id;
        insert into ibp_processing_queue (id, customer_id, msisdn, co_id, tmcode, sncode, serviceparameter, old_val, new_val, action_id, process_status_timestamp, process_status, req_id)
        values (IBP_PROCESSING_SEQ.nextval, v_cust_id, v_msisdn, v_co_id, v_tm, v_sn, v_cs_param1, v_old_param, v_new_param, v_action_id, sysdate, 1, i_req_id);
        update ibp_staging set request_status='P' where req_id=i_req_id;
        commit;
    else
        update ibp_staging set request_status='IB' where req_id=i_req_id;
        commit;
    end if;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            update ibp_staging set request_status='E-No data' where req_id=i_req_id;
            commit;
        WHEN OTHERS THEN
            update ibp_staging set request_status='E' where req_id=i_req_id;
            commit;
end;
procedure ibp_billcycle_change ( i_req_id in integer )
is
v_cust_id integer;
v_action_id number;
v_old_billcycle varchar2(2);
v_new_billcycle varchar2(2);
v_rem varchar2(400);
begin
    select customer_id , old_val, new_val, action_id into v_cust_id, v_old_billcycle, v_new_billcycle, v_action_id from ibp_staging
    where req_id=i_req_id and action_id=10;
    for j in (select dn_num from ibp_view where customer_id=v_cust_id and ch_status in ('a', 's'))
    loop
    v_rem:=v_rem||'|'||j.dn_num;
    end loop;
    v_rem:=substr(v_rem, 2);
    insert into ibp_processing_queue (id, customer_id, billcycle, old_val, new_val, action_id, process_status_timestamp, process_status, remark, req_id)
    values (IBP_PROCESSING_SEQ.nextval, v_cust_id, v_new_billcycle, v_old_billcycle, v_new_billcycle, v_action_id, sysdate, 1, v_rem, i_req_id);
    update ibp_staging set request_status='P' where req_id=i_req_id;
    commit;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            update ibp_staging set request_status='E-No data' where req_id=i_req_id;
            commit;
        WHEN OTHERS THEN
            update ibp_staging set request_status='E' where req_id=i_req_id;
            commit;
end;
procedure ibp_msisdn_change ( i_req_id in integer )
is
v_co_id integer;
v_cust_id integer;
v_action_id number;
v_old_id number;
v_new_id number;
v_old_msisdn varchar2(20);
v_new_msisdn varchar2(20);
begin
    select co_id , old_val, new_val, action_id into v_co_id, v_old_id, v_new_id, v_action_id from ibp_staging
    where req_id=i_req_id and action_id=9;
    select customer_id into v_cust_id from ibp_view where co_id=v_co_id;
    select dn_num into v_old_msisdn from directory_number where dn_id=v_old_id;
    select dn_num into v_new_msisdn from directory_number where dn_id=v_new_id;
    insert into ibp_processing_queue (id, customer_id, co_id, msisdn, old_val, new_val, action_id, process_status_timestamp, process_status, req_id)
    values (IBP_PROCESSING_SEQ.nextval, v_cust_id, v_co_id, v_new_msisdn, v_old_msisdn, v_new_msisdn, v_action_id, sysdate, 1, i_req_id);
    update ibp_staging set request_status='P' where req_id=i_req_id;
    commit;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            update ibp_staging set request_status='E-No data' where req_id=i_req_id;
            commit;
        WHEN OTHERS THEN
            update ibp_staging set request_status='E' where req_id=i_req_id;
            commit;
end;
procedure ibp_imsi_change ( i_req_id in integer )
is
v_co_id integer;
v_action_id number;
v_cust_id integer;
v_msisdn varchar2(20);
v_old_imsi varchar2(50);
v_new_imsi varchar2(50);
begin
    select co_id , old_val, new_val, action_id into v_co_id, v_old_imsi, v_new_imsi, v_action_id from ibp_staging
    where req_id=i_req_id and action_id=8;
    select customer_id, dn_num into v_cust_id, v_msisdn from ibp_view where co_id=v_co_id;
    insert into ibp_processing_queue (id, co_id, customer_id, msisdn, old_val, new_val, action_id, process_status_timestamp, process_status, req_id)
    values (IBP_PROCESSING_SEQ.nextval, v_co_id, v_cust_id, v_msisdn, v_old_imsi, v_new_imsi, v_action_id, sysdate, 1, i_req_id);
    update ibp_staging set request_status='P' where req_id=i_req_id;
    commit;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            update ibp_staging set request_status='E-No data' where req_id=i_req_id;
            commit;
        WHEN OTHERS THEN
            update ibp_staging set request_status='E' where req_id=i_req_id;
            commit;
end;
procedure ibp_contract_takeover ( i_req_id in integer )
is
v_co_id integer;
v_sccode integer;
v_action_id number;
v_old_co_id number;
v_new_co_id number;
v_ch_reason integer;
v_cust_id integer;
v_msisdn number;
v_bcycle number;
v_tm integer;
v_rem varchar2(400);
begin
    select co_id , old_val, new_val, action_id into v_co_id, v_old_co_id, v_new_co_id, v_action_id from ibp_staging
    where req_id=i_req_id and action_id=11;
    select customer_id, billcycle, dn_num, tmcode, sccode into v_cust_id, v_bcycle, v_msisdn, v_tm, v_sccode from ibp_view where co_id=v_co_id;
    for i in (select sncode||nvl2(cs_sparam1, '('||cs_sparam1||')', null) serv from contr_services where co_id=v_co_id and tmcode=v_tm 
                and sncode in (select sncode from ibp_product_configuration where tmcode=v_tm or tmcode='ALL'))
    loop
    v_rem:=v_rem||i.serv||'|';
    end loop;
    v_rem:=v_rem||'::';
    for j in (select dn_num from ibp_view where customer_id=v_cust_id and ch_status in ('a', 's') and sccode=v_sccode)
    loop
    v_rem:=v_rem||'|'||j.dn_num;
    end loop;
    insert into ibp_processing_queue (id, customer_id, billcycle, ch_reason, msisdn, co_id, tmcode, action_id, old_val, new_val, process_status_timestamp, process_status, sccode, remark, req_id)
    values (IBP_PROCESSING_SEQ.nextval, v_cust_id, v_bcycle, v_ch_reason, v_msisdn, v_co_id, v_tm, v_action_id, v_old_co_id, v_new_co_id, sysdate, 1, v_sccode, v_rem, i_req_id);
    update ibp_staging set request_status='P' where req_id=i_req_id;
    commit;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            update ibp_staging set request_status='E-No data' where req_id=i_req_id;
            commit;
        WHEN OTHERS THEN
            update ibp_staging set request_status='E' where req_id=i_req_id;
            commit;
end;
procedure ibp_process_queue_population (i_req_id in integer)
is
v_action_id number;
begin
select action_id into v_action_id from ibp_staging where req_id=i_req_id;
case v_action_id
    when 1 then
        ibp.ibp_contract_activation(i_req_id);
    when 2 then 
        ibp.ibp_contract_sus_react_deact(i_req_id);
    when 3 then 
        ibp.ibp_contract_sus_react_deact(i_req_id);
    when 4 then 
        ibp.ibp_contract_sus_react_deact(i_req_id);
    when 5 then 
        ibp.ibp_service_activation(i_req_id);
    when 6 then 
        ibp.ibp_service_deactivation(i_req_id);
    when 7 then 
        ibp.ibp_parameter_change(i_req_id);
    when 8 then 
        ibp.ibp_imsi_change(i_req_id);
    when 9 then 
        ibp.ibp_msisdn_change(i_req_id);
    when 10 then 
        ibp.ibp_billcycle_change(i_req_id);
    when 11 then 
        ibp.ibp_contract_takeover(i_req_id);
    when 12 then 
        ibp.ibp_rateplan_change(i_req_id);
    else
        update ibp_staging set request_status='E' where req_id=i_req_id;
end case;
end;
end ibp;
/
